[gd_scene load_steps=60 format=2]

[ext_resource path="res://Fonts/zeldadxt.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://Sprites/Shaders/white.shader" type="Shader" id=2]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/ScenesOLBlink.tres" type="Animation" id=3]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/GLBlink.tres" type="Animation" id=4]
[ext_resource path="res://Sprites/Palettes/GL/GL-Default.png" type="Texture" id=5]
[ext_resource path="res://Sprites/Palettes/OL/Default Palette.png" type="Texture" id=6]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/2PCursor.png" type="Texture" id=7]
[ext_resource path="res://Sprites/Stages/Clocktower/Clocktower-Thumbnail-Spritesheet.png" type="Texture" id=8]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/Frame.png" type="Texture" id=9]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/1PCursor.png" type="Texture" id=10]
[ext_resource path="res://Sprites/Stages/Office/Office.png" type="Texture" id=11]
[ext_resource path="res://Sprites/Palettes/SL/SL-Palette.png" type="Texture" id=12]
[ext_resource path="res://Sprites/Stages/Cathedral/Cathedral_Full.png" type="Texture" id=13]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/OL-Portrait-Cropped-Sheet.png" type="Texture" id=14]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/GLwBGAnimation-Sheet.png" type="Texture" id=15]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/GLwBGAnimation-Blink.png" type="Texture" id=16]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/SLwBG-Sheet.png" type="Texture" id=17]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/OL-Portrait-BG.png" type="Texture" id=18]
[ext_resource path="res://Scripts/CharacterSelect/ScrollText.gd" type="Script" id=19]
[ext_resource path="res://Scripts/GameScenes/CharSelectScene.cs" type="Script" id=20]
[ext_resource path="res://Fonts/font.tres" type="DynamicFont" id=21]
[ext_resource path="res://Scripts/CharacterSelect/CharSelectAudio.cs" type="Script" id=22]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/CharacterSelectScreenAnimation.tres" type="AnimationNodeStateMachine" id=23]
[ext_resource path="res://Scenes/Characters/SLSprite.tscn" type="PackedScene" id=24]
[ext_resource path="res://Scenes/Characters/OLSprite.tscn" type="PackedScene" id=25]
[ext_resource path="res://Scenes/Characters/GL.tscn" type="PackedScene" id=26]
[ext_resource path="res://Scenes/Characters/GLSprite.tscn" type="PackedScene" id=27]
[ext_resource path="res://Scenes/Characters/OL.tscn" type="PackedScene" id=28]

[sub_resource type="DynamicFont" id=31]
size = 23
font_data = ExtResource( 1 )

[sub_resource type="Theme" id=1]
default_font = ExtResource( 21 )

[sub_resource type="DynamicFont" id=2]
size = 23
font_data = ExtResource( 1 )

[sub_resource type="ShaderMaterial" id=3]
shader = ExtResource( 2 )
shader_param/whitening = 0.0

[sub_resource type="Animation" id=4]
resource_name = "GL"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("P1Selected/GLSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 158, 173 ]
}

[sub_resource type="Animation" id=5]
resource_name = "OL"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("P1Selected/OLSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 158, 175 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P1Selected/GLSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 158, 173 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("P1Selected/SLSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 108, 113 ]
}

[sub_resource type="Animation" id=30]
resource_name = "BG"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/OLSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6, 1.3, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/GLSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0, 9, 9 ]
}

[sub_resource type="Animation" id=6]
resource_name = "1PShine"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("P1Cursor:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0, 9, 9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P2Cursor:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0, 9, 9 ]
}

[sub_resource type="Animation" id=7]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Bkgs/Clock:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 7 ]
}

[sub_resource type="Animation" id=8]
length = 1.2
tracks/0/type = "value"
tracks/0/path = NodePath("P1Cursor:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P1Cursor:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("P1Cursor:active")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("P2Cursor:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.6, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("P2Cursor:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.6, 0.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=9]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/GLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/GLSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=10]
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/GLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}

[sub_resource type="Animation" id=11]
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/GLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P1Cursor:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("HBoxContainer/OLSprite:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("HBoxContainer/OLSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("HBoxContainer/GLSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("P1Cursor:active")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("HBoxContainer/SLSprite:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("HBoxContainer/SLSprite:frame")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("P2Cursor:modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=12]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/OLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/OLSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=13]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("P1Cursor:active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[sub_resource type="Animation" id=14]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/SLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/SLSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 21, 21 ), Vector2( 1, 1 ) ]
}

[sub_resource type="AnimationNodeStateMachinePlayback" id=15]

[sub_resource type="Shader" id=16]
code = "shader_type canvas_item;
render_mode unshaded, blend_disabled;

uniform sampler2D palette;									//Use palletes in collum with colors in rows
uniform float palette_count = 1.0;							//Used for highlighting hovered color
uniform float palette_index = 0.0;							//Set for chosing differen palettes (0 is first)

void fragment(){
    
	float increment = 1.0/palette_count;					//value for getting palette index
	float y = increment*palette_index + increment * 0.5;	// + safety measure for floating point imprecision
	vec4 color = texture(TEXTURE, UV);						//Original grayscale color used as collumn index
	vec4 new_color = texture(palette, vec2(color.r, y));	//get color from palette texture
	float a = step(0.00392, color.a);						//check if transparent color is less than 1/255 for backgrounds
	new_color.a *= a;										//if BG is transparent alpha is multiplied by 0
    
	COLOR = new_color;										//set new color from palette
}"

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )
shader_param/palette_count = 1.0
shader_param/palette_index = 0.0
shader_param/palette = ExtResource( 6 )

[sub_resource type="Shader" id=18]
code = "shader_type canvas_item;
render_mode unshaded, blend_disabled;

uniform sampler2D palette;									//Use palletes in collum with colors in rows
uniform float palette_count = 1.0;							//Used for highlighting hovered color
uniform float palette_index = 0.0;							//Set for chosing differen palettes (0 is first)

void fragment(){
    
	float increment = 1.0/palette_count;					//value for getting palette index
	float y = increment*palette_index + increment * 0.5;	// + safety measure for floating point imprecision
	vec4 color = texture(TEXTURE, UV);						//Original grayscale color used as collumn index
	vec4 new_color = texture(palette, vec2(color.r, y));	//get color from palette texture
	float a = step(0.00392, color.a);						//check if transparent color is less than 1/255 for backgrounds
	new_color.a *= a;										//if BG is transparent alpha is multiplied by 0
    
	COLOR = new_color;										//set new color from palette
}"

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )
shader_param/palette_count = 1.0
shader_param/palette_index = 0.0
shader_param/palette = ExtResource( 12 )

[sub_resource type="Shader" id=20]
code = "shader_type canvas_item;
render_mode unshaded, blend_disabled;

uniform sampler2D palette;									//Use palletes in collum with colors in rows
uniform float palette_count = 1.0;							//Used for highlighting hovered color
uniform float palette_index = 0.0;							//Set for chosing differen palettes (0 is first)

void fragment(){
    
	float increment = 1.0/palette_count;					//value for getting palette index
	float y = increment*palette_index + increment * 0.5;	// + safety measure for floating point imprecision
	vec4 color = texture(TEXTURE, UV);						//Original grayscale color used as collumn index
	vec4 new_color = texture(palette, vec2(color.r, y));	//get color from palette texture
	float a = step(0.00392, color.a);						//check if transparent color is less than 1/255 for backgrounds
	new_color.a *= a;										//if BG is transparent alpha is multiplied by 0
    
	COLOR = new_color;										//set new color from palette
}"

[sub_resource type="ShaderMaterial" id=21]
shader = SubResource( 20 )
shader_param/palette_count = 1.0
shader_param/palette_index = 0.0
shader_param/palette = ExtResource( 5 )

[sub_resource type="Shader" id=22]
code = "shader_type canvas_item;
render_mode unshaded, blend_disabled;

uniform sampler2D palette;									//Use palletes in collum with colors in rows
uniform float palette_count = 1.0;							//Used for highlighting hovered color
uniform float palette_index = 0.0;							//Set for chosing differen palettes (0 is first)

void fragment(){
    
	float increment = 1.0/palette_count;					//value for getting palette index
	float y = increment*palette_index + increment * 0.5;	// + safety measure for floating point imprecision
	vec4 color = texture(TEXTURE, UV);						//Original grayscale color used as collumn index
	vec4 new_color = texture(palette, vec2(color.r, y));	//get color from palette texture
	float a = step(0.00392, color.a);						//check if transparent color is less than 1/255 for backgrounds
	new_color.a *= a;										//if BG is transparent alpha is multiplied by 0
    
	COLOR = new_color;										//set new color from palette
}"

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )
shader_param/palette_count = 1.0
shader_param/palette_index = 0.0
shader_param/palette = ExtResource( 6 )

[sub_resource type="Shader" id=24]
code = "shader_type canvas_item;
render_mode unshaded, blend_disabled;

uniform sampler2D palette;									//Use palletes in collum with colors in rows
uniform float palette_count = 1.0;							//Used for highlighting hovered color
uniform float palette_index = 0.0;							//Set for chosing differen palettes (0 is first)

void fragment(){
    
	float increment = 1.0/palette_count;					//value for getting palette index
	float y = increment*palette_index + increment * 0.5;	// + safety measure for floating point imprecision
	vec4 color = texture(TEXTURE, UV);						//Original grayscale color used as collumn index
	vec4 new_color = texture(palette, vec2(color.r, y));	//get color from palette texture
	float a = step(0.00392, color.a);						//check if transparent color is less than 1/255 for backgrounds
	new_color.a *= a;										//if BG is transparent alpha is multiplied by 0
    
	COLOR = new_color;										//set new color from palette
}"

[sub_resource type="ShaderMaterial" id=25]
shader = SubResource( 24 )
shader_param/palette_count = 1.0
shader_param/palette_index = 0.0
shader_param/palette = ExtResource( 12 )

[sub_resource type="Shader" id=26]
code = "shader_type canvas_item;

// Amount of detail.
uniform int octaves = 4;

// Opacity of the output fog.
uniform float starting_amplitude: hint_range(0.0, 0.5) = 0.5;

// Rate of pattern within the fog.
uniform float starting_frequency = 1.0;

// Shift towards transparency (clamped) for sparser fog.
uniform float shift: hint_range(-1.0, 0.0) = -0.2;

// Direction and speed of travel.
uniform vec2 velocity = vec2(1.0, 1.0);

// Color of the fog.
uniform vec4 fog_color: hint_color = vec4(0.0, 0.0, 0.0, 1.0);

// Noise texture; OpenSimplexNoise is great, but any filtered texture is fine.
uniform sampler2D noise;

float rand(vec2 uv) {
	float amplitude = starting_amplitude;
	float frequency = starting_frequency;
	float output = 0.0;
	for (int i = 0; i < octaves; i++) {
		output += texture(noise, uv * frequency).x * amplitude;
		amplitude /= 2.0;
		frequency *= 2.0;
	}
	return clamp(output + shift, 0.0, 1.0);
}

void fragment() {
	vec2 motion = vec2(rand(UV + TIME * starting_frequency * velocity));
	COLOR = mix(vec4(0.0), fog_color, rand(UV + motion));
}"

[sub_resource type="OpenSimplexNoise" id=27]
seed = 2
octaves = 6
period = 141.8
persistence = 0.578
lacunarity = 2.23

[sub_resource type="NoiseTexture" id=28]
noise = SubResource( 27 )

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 26 )
shader_param/octaves = 2
shader_param/starting_amplitude = 0.5
shader_param/starting_frequency = 1.188
shader_param/shift = -0.088
shader_param/velocity = Vector2( 1, 1 )
shader_param/fog_color = Color( 0.156863, 0.12549, 0.215686, 1 )
shader_param/noise = SubResource( 28 )

[node name="CharSelectScreen" type="Node2D"]
script = ExtResource( 20 )
P1Texture = ExtResource( 10 )
OLScene = ExtResource( 28 )
GLScene = ExtResource( 26 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Bkgs" type="Node2D" parent="CanvasLayer"]
position = Vector2( 230, 40 )

[node name="OfficeInterior" type="Sprite" parent="CanvasLayer/Bkgs"]
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 11 )

[node name="Label" type="Label" parent="CanvasLayer/Bkgs/OfficeInterior"]
margin_left = -92.808
margin_top = -181.065
margin_right = 3.19202
margin_bottom = -162.065
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 31 )
text = "OFFICE"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Cathedral" type="Sprite" parent="CanvasLayer/Bkgs"]
visible = false
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 13 )

[node name="Label" type="Label" parent="CanvasLayer/Bkgs/Cathedral"]
margin_left = -137.038
margin_top = -184.014
margin_right = 6.96216
margin_bottom = -165.014
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 31 )
text = "CATHEDRAL"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Clock" type="Sprite" parent="CanvasLayer/Bkgs"]
visible = false
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 8 )
hframes = 8

[node name="Label" type="Label" parent="CanvasLayer/Bkgs/Clock"]
margin_left = -154.528
margin_top = -181.065
margin_right = 5.47235
margin_bottom = -162.065
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 31 )
text = "CLOCKTOWER"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DebugText" type="Label" parent="CanvasLayer"]
margin_right = 40.0
margin_bottom = 16.0
theme = SubResource( 1 )
text = "P1"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="P2Cursor" type="Sprite" parent="CanvasLayer"]
position = Vector2( 141, 135 )
z_index = 1
texture = ExtResource( 7 )
hframes = 10
frame = 9

[node name="P1Cursor" type="Sprite" parent="CanvasLayer"]
position = Vector2( 141, 137 )
z_index = 1
texture = ExtResource( 10 )
hframes = 10
frame = 9

[node name="ScrollText" type="Label" parent="CanvasLayer"]
anchor_right = 1.0
margin_top = 223.378
margin_bottom = 254.378
custom_fonts/font = SubResource( 2 )
text = "SELECT YOUR LADY..."
align = 1
script = ExtResource( 19 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="CanvasLayer"]
margin_left = 140.0
margin_top = 137.0
margin_right = 180.0
margin_bottom = 177.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="OLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer"]
texture = ExtResource( 18 )
hframes = 3
frame = 2

[node name="OLPortrait" type="Sprite" parent="CanvasLayer/HBoxContainer/OLSprite"]
texture = ExtResource( 14 )
hframes = 3
frame = 1

[node name="GLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer"]
material = SubResource( 3 )
position = Vector2( 100, 0 )
texture = ExtResource( 15 )
hframes = 10
frame = 2

[node name="GLPortrait" type="Sprite" parent="CanvasLayer/HBoxContainer/GLSprite"]
texture = ExtResource( 16 )
hframes = 3
frame = 1

[node name="SLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer"]
material = SubResource( 3 )
position = Vector2( 200, 0 )
texture = ExtResource( 17 )
hframes = 3
frame = 1

[node name="Frame" type="Sprite" parent="CanvasLayer/HBoxContainer/SLSprite"]
visible = false
position = Vector2( 2.37173, 4.83978 )
texture = ExtResource( 9 )

[node name="GridContainer" type="GridContainer" parent="CanvasLayer"]
anchor_left = 0.5
anchor_top = 0.497478
anchor_right = 0.5
anchor_bottom = 0.497478
margin_left = -102.46
margin_top = -72.5
margin_right = 103.54
margin_bottom = 70.5
custom_constants/vseparation = 0
custom_constants/hseparation = 0
columns = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="1PShowcase" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "OL"
anims/GL = SubResource( 4 )
anims/OL = SubResource( 5 )

[node name="BG Animation" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "BG"
anims/BG = SubResource( 30 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "1PShine"
anims/1PShine = SubResource( 6 )
anims/Blink = ExtResource( 4 )
anims/ClockTowerThumbnail = SubResource( 7 )
anims/CursorFadeIn = SubResource( 8 )
anims/GLFadeIn = SubResource( 9 )
anims/GLSelect = SubResource( 10 )
anims/Init = SubResource( 11 )
anims/OLBlink = ExtResource( 3 )
anims/OLFadeIn = SubResource( 12 )
anims/RESET = SubResource( 13 )
anims/SLFadeIn = SubResource( 14 )

[node name="StartupAnimation" type="AnimationTree" parent="CanvasLayer"]
tree_root = ExtResource( 23 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 15 )

[node name="P2Selected" type="Position2D" parent="CanvasLayer"]
position = Vector2( 430, 145 )

[node name="GLSprite" parent="CanvasLayer/P2Selected" instance=ExtResource( 27 )]
visible = false
frame = 158

[node name="OLSprite" parent="CanvasLayer/P2Selected" instance=ExtResource( 25 )]
material = SubResource( 17 )
frame = 158

[node name="Label" type="Label" parent="CanvasLayer/P2Selected/OLSprite"]
visible = false
margin_left = -11.5887
margin_top = 30.6838
margin_right = 21.4113
margin_bottom = 46.6838
custom_fonts/font = ExtResource( 21 )
text = "OL"
align = 1
valign = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SLSprite" parent="CanvasLayer/P2Selected" instance=ExtResource( 24 )]
visible = false
material = SubResource( 19 )
use_parent_material = true

[node name="P1Selected" type="Position2D" parent="CanvasLayer"]
position = Vector2( 45, 145 )

[node name="GLSprite" parent="CanvasLayer/P1Selected" instance=ExtResource( 27 )]
visible = false
material = SubResource( 21 )
frame = 171

[node name="OLSprite" parent="CanvasLayer/P1Selected" instance=ExtResource( 25 )]
material = SubResource( 23 )
frame = 173

[node name="SLSprite" parent="CanvasLayer/P1Selected" instance=ExtResource( 24 )]
visible = false
material = SubResource( 25 )
frame = 112

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 29 )
margin_top = -20.0
margin_right = 480.0
margin_bottom = 270.0
color = Color( 0.141176, 0.180392, 0.235294, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CharSelectAudio" type="AudioStreamPlayer" parent="."]
bus = "UI"
script = ExtResource( 22 )
