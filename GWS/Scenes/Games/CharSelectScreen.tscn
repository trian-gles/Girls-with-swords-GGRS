[gd_scene load_steps=60 format=2]

[ext_resource path="res://Sprites/CharacterSelect/Portraits/OL-Portrait-BG.png" type="Texture" id=1]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/ScenesOLBlink.tres" type="Animation" id=2]
[ext_resource path="res://Sprites/Spotlight Shadow.png" type="Texture" id=3]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/2PCursor.png" type="Texture" id=4]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/GLwBGAnimation-Blink.png" type="Texture" id=5]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/GLBlink.tres" type="Animation" id=6]
[ext_resource path="res://Scenes/Games/SelectedChar.tscn" type="PackedScene" id=7]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/SLwBG-Sheet.png" type="Texture" id=9]
[ext_resource path="res://Sprites/Stages/Clocktower/Clocktower-Thumbnail-Spritesheet.png" type="Texture" id=10]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/1PCursor.png" type="Texture" id=11]
[ext_resource path="res://Scripts/GameScenes/CharSelectScene.cs" type="Script" id=14]
[ext_resource path="res://Scripts/CharacterSelect/ScrollText.gd" type="Script" id=15]
[ext_resource path="res://Fonts/zeldadxt.ttf" type="DynamicFontData" id=16]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/CharacterSelectScreenAnimation.tres" type="AnimationNodeStateMachine" id=17]
[ext_resource path="res://Sprites/Shaders/white.shader" type="Shader" id=18]
[ext_resource path="res://Scenes/Characters/GL.tscn" type="PackedScene" id=19]
[ext_resource path="res://Scenes/Characters/OL.tscn" type="PackedScene" id=20]
[ext_resource path="res://Fonts/font.tres" type="DynamicFont" id=21]
[ext_resource path="res://Scripts/CharacterSelect/CharSelectAudio.cs" type="Script" id=24]
[ext_resource path="res://Sprites/Stages/Office/Office.png" type="Texture" id=25]
[ext_resource path="res://Sprites/Stages/Cathedral/Cathedral_Full.png" type="Texture" id=26]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/OL-Portrait-Cropped-Sheet.png" type="Texture" id=27]
[ext_resource path="res://Sprites/CharacterSelect/Portraits/GLwBGAnimation-Sheet.png" type="Texture" id=28]
[ext_resource path="res://Sprites/CharacterSelect/ColorSelect.png" type="Texture" id=29]
[ext_resource path="res://Sprites/Particles/hat.png" type="Texture" id=30]

[sub_resource type="DynamicFont" id=1]
size = 23
font_data = ExtResource( 16 )

[sub_resource type="Theme" id=2]
default_font = ExtResource( 21 )

[sub_resource type="DynamicFont" id=3]
size = 23
font_data = ExtResource( 16 )

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 18 )
shader_param/whitening = 0.0

[sub_resource type="Animation" id=6]
resource_name = "BG"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/OLSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6, 1.3, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/GLSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0, 9, 9 ]
}

[sub_resource type="Animation" id=7]
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("P1Cursor:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0, 9, 9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P2Cursor:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0, 9, 9 ]
}

[sub_resource type="Animation" id=8]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Bkgs/Clock:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 7 ]
}

[sub_resource type="Animation" id=9]
length = 1.2
tracks/0/type = "value"
tracks/0/path = NodePath("P1Cursor:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P1Cursor:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("P1Cursor:active")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("P2Cursor:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.6, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("P2Cursor:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.6, 0.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=10]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/GLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/GLSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ), Vector2( 0.8, 0.8 ) ]
}

[sub_resource type="Animation" id=11]
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/GLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}

[sub_resource type="Animation" id=45]
resource_name = "HLFadeIn"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/HLSprite2:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 21, 21 ), Vector2( 0.8, 0.8 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/HLSprite2:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=12]
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/GLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("P1Cursor:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("HBoxContainer/OLSprite:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("HBoxContainer/OLSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("HBoxContainer/GLSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("P1Cursor:active")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("HBoxContainer/SLSprite:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("HBoxContainer/SLSprite:frame")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("P2Cursor:modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("HBoxContainer/HLSprite2:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=13]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/OLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/OLSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ), Vector2( 0.8, 0.8 ) ]
}

[sub_resource type="Animation" id=14]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("P1Cursor:active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[sub_resource type="Animation" id=15]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("HBoxContainer/SLSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HBoxContainer/SLSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 21, 21 ), Vector2( 0.8, 0.8 ) ]
}

[sub_resource type="AnimationNodeStateMachinePlayback" id=16]

[sub_resource type="Shader" id=17]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform int amount = 40;
uniform float pixelationLevel = 50.0;
uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment() {
    // Determine pixelation level
    
    // Calculate pixelated UV coordinates
    vec2 pixelatedUV = floor(UV * pixelationLevel) / pixelationLevel;

    // Rotate, skew, and move the UVs
    vec2 transformed_uv = (rotate(angle) * (pixelatedUV - position)) / ((pixelatedUV.y + spread) - (pixelatedUV.y * spread));

    // Animate the ray according to the new transformed UVs
    vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
    vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);

    // Cut off the ray's edges
    float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
    ray1 *= cut;
    ray2 *= cut;

    // Apply the noise pattern (i.e., create the rays)
    float rays;

    if (hdr) {
        // This is not really HDR, but check this to not clamp the two merged rays making 
        // their values go over 1.0. Can make for some nice effect
        rays = noise(ray1) + (noise(ray2) * ray2_intensity);
    } else {
        rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
    }

    // Fade out edges
    rays *= smoothstep(0.0, falloff, (1.0 - UV.y));                                              // Bottom
    rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x);                        // Left
    rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x);                   // Right

    // Color to the rays
    vec3 shine = vec3(rays) * color.rgb;

    // Try different blending modes for a nicer effect. \"Screen\" is included in the code,
    // but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
    // With \"Screen\" blend mode:
    shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;

    COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )
shader_param/amount = 40
shader_param/pixelationLevel = 50.0
shader_param/angle = -0.3
shader_param/position = -0.412
shader_param/spread = 0.707
shader_param/cutoff = 0.026
shader_param/falloff = 0.2
shader_param/edge_fade = 0.15
shader_param/speed = 10.0
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.093
shader_param/color = Color( 1, 0.65098, 0.831373, 0.537255 )
shader_param/hdr = false
shader_param/seed = 10.0

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 17 )
shader_param/amount = 40
shader_param/pixelationLevel = 50.0
shader_param/angle = -0.3
shader_param/position = -0.412
shader_param/spread = 0.707
shader_param/cutoff = 0.026
shader_param/falloff = 0.2
shader_param/edge_fade = 0.15
shader_param/speed = 10.0
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.093
shader_param/color = Color( 0.65098, 0.772549, 1, 0.537255 )
shader_param/hdr = false
shader_param/seed = 10.0

[sub_resource type="Animation" id=20]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("ColorLeft:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRight:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 4 ]
}

[sub_resource type="Animation" id=21]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("ColorLeft:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 4, 15 ]
}

[sub_resource type="Animation" id=22]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRight:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 4, 15 ]
}

[sub_resource type="Animation" id=23]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("ColorLeft:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRight:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 4 ]
}

[sub_resource type="Animation" id=24]
tracks/0/type = "value"
tracks/0/path = NodePath("ColorLeft:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 4, 15 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRight:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="AnimationNodeAnimation" id=25]
animation = "Bounce"

[sub_resource type="AnimationNodeAnimation" id=26]
animation = "Left Click"

[sub_resource type="AnimationNodeStateMachineTransition" id=27]

[sub_resource type="AnimationNodeStateMachineTransition" id=28]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachine" id=29]
states/Bounce/node = SubResource( 25 )
states/Bounce/position = Vector2( 268, 95 )
"states/Left Click/node" = SubResource( 26 )
"states/Left Click/position" = Vector2( 487, 46 )
transitions = [ "Bounce", "Left Click", SubResource( 27 ), "Left Click", "Bounce", SubResource( 28 ) ]
start_node = "Bounce"

[sub_resource type="AnimationNodeStateMachinePlayback" id=30]

[sub_resource type="Shader" id=41]
code = "shader_type canvas_item;

// Amount of detail.
uniform int octaves = 4;

// Opacity of the output fog.
uniform float starting_amplitude: hint_range(0.0, 0.5) = 0.5;

// Rate of pattern within the fog.
uniform float starting_frequency = 1.0;

// Shift towards transparency (clamped) for sparser fog.
uniform float shift: hint_range(-1.0, 0.0) = -0.2;

// Direction and speed of travel.
uniform vec2 velocity = vec2(1.0, 1.0);

// Color of the fog.
uniform vec4 fog_color: hint_color = vec4(0.0, 0.0, 0.0, 1.0);

// Noise texture; OpenSimplexNoise is great, but any filtered texture is fine.
uniform sampler2D noise;

float rand(vec2 uv) {
	float amplitude = starting_amplitude;
	float frequency = starting_frequency;
	float output = 0.0;
	for (int i = 0; i < octaves; i++) {
		output += texture(noise, uv * frequency).x * amplitude;
		amplitude /= 2.0;
		frequency *= 2.0;
	}
	return clamp(output + shift, 0.0, 1.0);
}

void fragment() {
	vec2 motion = vec2(rand(UV + TIME * starting_frequency * velocity));
	COLOR = mix(vec4(0.0), fog_color, rand(UV + motion));
}"

[sub_resource type="OpenSimplexNoise" id=42]
seed = 2
octaves = 6
period = 141.8
persistence = 0.578
lacunarity = 2.23

[sub_resource type="NoiseTexture" id=43]
noise = SubResource( 42 )

[sub_resource type="ShaderMaterial" id=44]
shader = SubResource( 41 )
shader_param/octaves = 2
shader_param/starting_amplitude = 0.5
shader_param/starting_frequency = 1.188
shader_param/shift = -0.088
shader_param/velocity = Vector2( 1, 1 )
shader_param/fog_color = Color( 0.156863, 0.12549, 0.215686, 1 )
shader_param/noise = SubResource( 43 )

[node name="CharSelectScreen" type="Node2D"]
script = ExtResource( 14 )
P1Texture = ExtResource( 11 )
OLScene = ExtResource( 20 )
GLScene = ExtResource( 19 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 100

[node name="Bkgs" type="Node2D" parent="CanvasLayer"]
position = Vector2( 230, 40 )

[node name="OfficeInterior" type="Sprite" parent="CanvasLayer/Bkgs"]
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 25 )

[node name="Label" type="Label" parent="CanvasLayer/Bkgs/OfficeInterior"]
margin_left = -92.808
margin_top = -181.065
margin_right = 3.19202
margin_bottom = -162.065
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 1 )
text = "OFFICE"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Cathedral" type="Sprite" parent="CanvasLayer/Bkgs"]
visible = false
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 26 )

[node name="Label" type="Label" parent="CanvasLayer/Bkgs/Cathedral"]
margin_left = -137.038
margin_top = -184.014
margin_right = 6.96216
margin_bottom = -165.014
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 1 )
text = "CATHEDRAL"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Clock" type="Sprite" parent="CanvasLayer/Bkgs"]
visible = false
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 10 )
hframes = 8

[node name="Label" type="Label" parent="CanvasLayer/Bkgs/Clock"]
margin_left = -154.528
margin_top = -181.065
margin_right = 5.47235
margin_bottom = -162.065
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 1 )
text = "CLOCKTOWER"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DebugText" type="Label" parent="CanvasLayer"]
margin_right = 40.0
margin_bottom = 16.0
theme = SubResource( 2 )
text = "P1"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="P2Cursor" type="Sprite" parent="CanvasLayer"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 190, 108 )
z_index = 1
texture = ExtResource( 4 )
hframes = 10

[node name="P1Cursor" type="Sprite" parent="CanvasLayer"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 190, 125 )
z_index = 1
texture = ExtResource( 11 )
hframes = 10

[node name="ScrollText" type="Label" parent="CanvasLayer"]
visible = false
anchor_right = 1.0
margin_top = 223.378
margin_bottom = 254.378
custom_fonts/font = SubResource( 3 )
align = 1
script = ExtResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="CanvasLayer/ScrollText"]
autostart = true

[node name="HBoxContainer" type="VBoxContainer" parent="CanvasLayer"]
anchor_right = 0.399
anchor_bottom = 0.27
margin_left = 189.0
margin_top = 118.0
margin_right = 160.0
margin_bottom = 177.1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="OLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 1 )
hframes = 3
frame = 2

[node name="OLPortrait" type="Sprite" parent="CanvasLayer/HBoxContainer/OLSprite"]
texture = ExtResource( 27 )
hframes = 3
frame = 2

[node name="GLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 4 )
position = Vector2( 80, 0 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 28 )
hframes = 10
frame = 2

[node name="GLPortrait" type="Sprite" parent="CanvasLayer/HBoxContainer/GLSprite"]
texture = ExtResource( 5 )
hframes = 3
frame = 2

[node name="SLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 4 )
position = Vector2( 0, 80 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 9 )
hframes = 3
frame = 2

[node name="HLSprite2" type="Sprite" parent="CanvasLayer/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 80, 80 )
scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 1 )
hframes = 3
frame = 2

[node name="HLSprite" type="Sprite" parent="CanvasLayer/HBoxContainer/HLSprite2"]
material = SubResource( 4 )
scale = Vector2( 10, 10 )
texture = ExtResource( 30 )

[node name="BG Animation" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "BG"
anims/BG = SubResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "1PShine"
anims/1PShine = SubResource( 7 )
anims/Blink = ExtResource( 6 )
anims/ClockTowerThumbnail = SubResource( 8 )
anims/CursorFadeIn = SubResource( 9 )
anims/GLFadeIn = SubResource( 10 )
anims/GLSelect = SubResource( 11 )
anims/HLFadeIn = SubResource( 45 )
anims/Init = SubResource( 12 )
anims/OLBlink = ExtResource( 2 )
anims/OLFadeIn = SubResource( 13 )
anims/RESET = SubResource( 14 )
anims/SLFadeIn = SubResource( 15 )

[node name="StartupAnimation" type="AnimationTree" parent="CanvasLayer"]
tree_root = ExtResource( 17 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 16 )

[node name="LeftSpotlight" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 18 )
margin_left = -7.69795
margin_top = -15.0705
margin_right = 88.3021
margin_bottom = 188.929
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Node2D" type="Node2D" parent="CanvasLayer/LeftSpotlight"]
position = Vector2( 37.4627, 158.076 )

[node name="Sprite" type="Sprite" parent="CanvasLayer/LeftSpotlight/Node2D"]
modulate = Color( 0, 0, 0, 0.490196 )
position = Vector2( 11.933, 26.3313 )
texture = ExtResource( 3 )

[node name="CPUParticles2D" type="CPUParticles2D" parent="CanvasLayer/LeftSpotlight"]
visible = false
position = Vector2( 37.4627, 158.076 )
scale = Vector2( 1.69591, 2.52 )
amount = 13
emission_shape = 2
emission_rect_extents = Vector2( 2, 2 )
direction = Vector2( 1.666, 0.288 )
spread = 138.6
gravity = Vector2( 50, 98.519 )
initial_velocity = 30.25
angular_velocity = -664.61
angular_velocity_random = 0.7
orbit_velocity = 1.54
radial_accel = -30.77
radial_accel_random = 0.34
tangential_accel = -100.0
color = Color( 0.980392, 0.760784, 1, 0.643137 )

[node name="RightSpotlight" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 19 )
margin_left = 484.483
margin_top = -13.967
margin_right = 580.483
margin_bottom = 190.033
rect_scale = Vector2( -1, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="CanvasLayer/RightSpotlight"]
modulate = Color( 0, 0, 0, 0.490196 )
position = Vector2( 50.8502, 182.364 )
texture = ExtResource( 3 )

[node name="P1ColorSelect" type="Node2D" parent="CanvasLayer"]
position = Vector2( 68.5433, 150.308 )
rotation = 3.14159
scale = Vector2( 2, -2 )

[node name="Animation" type="AnimationPlayer" parent="CanvasLayer/P1ColorSelect"]
autoplay = "Bounce"
anims/Bounce = SubResource( 20 )
anims/Left = SubResource( 21 )
anims/Right = SubResource( 22 )

[node name="ColorLeft" type="Sprite" parent="CanvasLayer/P1ColorSelect"]
position = Vector2( 27, 0 )
rotation = 3.14159
scale = Vector2( 1, -1 )
texture = ExtResource( 29 )
hframes = 16

[node name="ColorRight" type="Sprite" parent="CanvasLayer/P1ColorSelect"]
texture = ExtResource( 29 )
hframes = 16

[node name="P2ColorSelect" type="Node2D" parent="CanvasLayer"]
position = Vector2( 76.5433, 150.308 )
rotation = 3.14159
scale = Vector2( 2, -2 )

[node name="ColorLeft" type="Sprite" parent="CanvasLayer/P2ColorSelect"]
position = Vector2( -166.287, 0 )
rotation = 3.14159
scale = Vector2( 1, -1 )
texture = ExtResource( 29 )
hframes = 16
frame = 2

[node name="ColorRight" type="Sprite" parent="CanvasLayer/P2ColorSelect"]
position = Vector2( -191.789, 0 )
texture = ExtResource( 29 )
hframes = 16
frame = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/P2ColorSelect"]
anims/Bounce = SubResource( 23 )
"anims/Left Click" = SubResource( 24 )

[node name="AnimationTree" type="AnimationTree" parent="CanvasLayer/P2ColorSelect"]
tree_root = SubResource( 29 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 30 )

[node name="P1Selected" parent="CanvasLayer" instance=ExtResource( 7 )]

[node name="P2Selected" parent="CanvasLayer" instance=ExtResource( 7 )]
position = Vector2( 440, 145 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 44 )
margin_top = -13.0
margin_right = 480.0
margin_bottom = 277.0
color = Color( 0.141176, 0.180392, 0.235294, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CharSelectAudio" type="AudioStreamPlayer" parent="."]
bus = "UI"
script = ExtResource( 24 )
